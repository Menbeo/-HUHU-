import pandas as pd
import streamlit as st
import requests

# Streamlit UI
st.title("Call Center CHATBOT")

# GitHub API Setup
GITHUB_USER = "Menbeo"
GITHUB_REPO = "-HUHU-"
GITHUB_API_URL = f"https://api.github.com/repos/{GITHUB_USER}/{GITHUB_REPO}/contents/"

@st.cache_data(ttl=60)  # Cache data for 60 seconds to reduce API calls
def get_all_csv_files():
    """L·∫•y danh s√°ch t·∫•t c·∫£ file CSV t·ª´ GitHub"""
    try:
        response = requests.get(GITHUB_API_URL)
        response.raise_for_status()
        files = response.json()

        # L·ªçc c√°c file c√≥ ƒëu√¥i .csv
        csv_files = {file["name"]: file["download_url"] for file in files if file["name"].endswith(".csv")}
        return csv_files
    except requests.exceptions.RequestException as e:
        st.error(f"L·ªói khi k·∫øt n·ªëi GitHub: {e}")
        return {}

def load_data(url):
    """ƒê·ªçc d·ªØ li·ªáu t·ª´ URL (GitHub)"""
    try:
        df = pd.read_csv(url)
        df.columns = df.columns.str.lower().str.strip()

        # Ki·ªÉm tra c·ªôt b·∫Øt bu·ªôc
        if {"key word", "description"}.issubset(df.columns):
            return df
        else:
            st.warning(f"‚ö†Ô∏è File {url} thi·∫øu c·ªôt b·∫Øt bu·ªôc!")
            return None
    except Exception as e:
        st.warning(f"‚ö†Ô∏è L·ªói ƒë·ªçc file {url}: {e}")
        return None

# L·∫•y danh s√°ch t·∫•t c·∫£ CSV files t·ª´ GitHub
csv_files = get_all_csv_files()

# L∆∞u tr·ªØ t·∫•t c·∫£ d·ªØ li·ªáu t·ª´ GitHub
all_data = {}
for file_name, file_url in csv_files.items():
    new_data = load_data(file_url)
    if new_data is not None:
        all_data[file_name] = new_data

# Hi·ªÉn th·ªã d·ªØ li·ªáu n·∫øu c√≥ √≠t nh·∫•t 1 file h·ª£p l·ªá
if all_data:
    #st.success(f"üìÇ ƒê√£ t√¨m th·∫•y {len(all_data)} t·∫≠p d·ªØ li·ªáu h·ª£p l·ªá!")

    # Ch·ªçn ch·ªß ƒë·ªÅ (file CSV)
    topic_choice = st.selectbox("üìå Ch·ªçn ch·ªß ƒë·ªÅ", [""] + list(all_data.keys()), index=0)

    if topic_choice:
        selected_df = all_data[topic_choice]
        keywords = selected_df["key word"].astype(str).tolist()

        # Ch·ªçn t·ª´ kh√≥a trong file ƒë√£ ch·ªçn
        keyword_choice = st.selectbox("üîç Ch·ªçn t·ª´ kh√≥a", [""] + keywords, index=0)

        if keyword_choice:
            description = selected_df.loc[selected_df["key word"] == keyword_choice, "description"]
            bot_response = description.iloc[0] if not description.empty else "Kh√¥ng c√≥ m√¥ t·∫£."
            st.write("ü§ñ **Bot:**", bot_response)
else:
    st.error("‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y d·ªØ li·ªáu h·ª£p l·ªá. Ki·ªÉm tra GitHub repository.")
